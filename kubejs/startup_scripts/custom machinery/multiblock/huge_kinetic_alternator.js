CustomMultiblock(
    event => {
        event.create('huge_kinetic_alternator', 'multiblock', Tier('lv'))
        .recipeType('huge_kinetic_alternator')
        .rotationState(RotationState.ALL)
        .appearanceBlock(GTBlocks.STEEL_HULL)
        .pattern(
            definition => FactoryBlockPattern.start()
            .aisle('----SSS----', '----DDD----', '----GSG----', '-----------')
            .aisle('--SSSSSSS--', '--SSCCCSS--', '--GGGSGGG--', '-----------')
            .aisle('-SSSSSSSSS-', '-SCCMMMCCS-', '-GGGGSGGGG-', '-----------')
            .aisle('-SSSSSSSSS-', '-SCM.S.MCS-', '-GGGGFGGGG-', '-----------')
            .aisle('SSSSSSSSSSS', 'DCM..S..MCD', 'GGGGSSSGGGG', '----SSS----')
            .aisle('SSSSSSSSSSS', 'DCMSSSSSMCD', 'SSSFSWSFSSS', '----SKS----')
            .aisle('SSSSSSSSSSS', 'DCM..S..MCD', 'GGGGSSSGGGG', '----SSS----')
            .aisle('-SSSSSSSSS-', '-SCM.S.MCS-', '-GGGGFGGGG-', '-----------')
            .aisle('-SSSSSSSSS-', '-SCCMMMCCS-', '-GGGGSGGGG-', '-----------')
            .aisle('--SSSSSSS--', '--SSCCCSS--', '--GGGSGGG--', '-----------')
            .aisle('----SBS----', '----DDD----', '----GSG----', '-----------')
            .where('S', Predicates.blocks(GTBlocks.STEEL_HULL.get()))
            .where('B', Predicates.controller(Predicates.blocks(definition.get())))
            .where('D', Predicates.blocks(GTBlocks.STEEL_HULL.get()).or(Predicates.ability(PartAbility.OUTPUT_ENERGY).setMinGlobalLimited(1).setMaxGlobalLimited(12)))
            .where('C', Predicates.heatingCoils())
            .where('M', Predicates.blocks('gtceu:magnetic_iron_block').or(Predicates.blocks('gtceu:magnetic_neodymium_block')).or(Predicates.blocks('gtceu:magnetic_samarium_block')).or(Predicates.blocks('gtceu:magnetic_steel_block')))
            .where('F', Predicates.blocks(GTBlocks.STEEL_HULL.get()).or(Predicates.abilities(PartAbility.IMPORT_FLUIDS).setMaxGlobalLimited(4)))
            .where('W', Predicates.blocks(GTBlocks.CASING_STEEL_GEARBOX.get()))
            .where('G', Predicates.blocks('xycraft_world:glass_viewer'))
            .where('K', Predicates.abilities(PartAbility.INPUT_KINETIC).setExactLimit(1))
            .where('.', Predicates.air())
            .where('-', Predicates.any())
            .build()
        )
        .workableCasingModel("gtceu:block/casings/solid/machine_casing_solid_steel","gtceu:block/multiblock/assembly_line")
    }
)