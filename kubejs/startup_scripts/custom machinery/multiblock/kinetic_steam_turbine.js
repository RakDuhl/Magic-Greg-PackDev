CustomMultiblock(
    event => {
        event.create('kinetic_steam_turbine', 'multiblock', Tier('lv'))
        .recipeType('kinetic_steam_turbine')
        .rotationState(RotationState.ALL)
        .appearanceBlock(GTBlocks.STEEL_HULL)
        .pattern(
            definition => FactoryBlockPattern.start()
            .aisle('BBBBB', 'SSSSS', 'SSKSS', 'SSSSS', '-SSS-')
            .aisle('BBBBB', 'S...S', 'S.G.S', 'S...S', '-SSS-')
            .aisle('BBBBB', 'S.T.S', 'STTTS', 'S.T.S', '-SSS-')
            .aisle('BBBBB', 'ST.TS', 'S.T.S', 'ST.TS', '-SSS-')
            .aisle('BBBBB', 'S.T.S', 'STTTS', 'S.T.S', '-SSS-')
            .aisle('BBBBB', 'ST.TS', 'S.T.S', 'ST.TS', '-SSS-')
            .aisle('BBBBB', 'SPPPS', 'SPPPS', 'SPPPS', '-SSS-')
            .aisle('-BBB-', '-SPS-', '-SPS-', '-SSS-', '-----')
            .aisle('-BBB-', '-SCS-', '-SSS-', '-----', '-----')
            .where('B', Predicates.blocks(GTBlocks.STEEL_BRICKS_HULL.get()).or(Predicates.autoAbilities(definition.getRecipeTypes())))
            .where('S', Predicates.blocks(GTBlocks.STEEL_HULL.get()))
            .where('P', Predicates.blocks(GTBlocks.CASING_STEEL_PIPE.get()))
            .where('T', Predicates.blocks('gtceu:steel_block'))
            .where('G', Predicates.blocks(GTBlocks.CASING_STEEL_GEARBOX.get()))
            .where('K', Predicates.abilities(PartAbility.OUTPUT_KINETIC).setExactLimit(1))
            .where('C', Predicates.controller(Predicates.blocks(definition.get())))
            .where('.', Predicates.air())
            .where('-', Predicates.any())
            .build()
        )
        .workableCasingModel("gtceu:block/casings/solid/machine_casing_solid_steel", "gtceu:block/generators/steam_turbine")
    }
)