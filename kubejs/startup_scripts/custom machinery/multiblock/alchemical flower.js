CustomMultiblock(
    event => {
        event.create('alchemical_flower', 'multiblock', Tier('lv'), Tier('mv'), Tier('hv'), Tier('ev'), Tier('iv'), Tier('luv'), Tier('zpm'), Tier('uv'))
        .recipeType('alchemical_flower')
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeModifiers([GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK)])
        .appearanceBlock(GTBlocks.CASING_STEEL_SOLID)
        .pattern(definition => FactoryBlockPattern.start()
            .aisle('..S..', '..A..', '..S..', '..G..', '.....', '.....')
            .aisle('.SSS.', '.ACA.', '.SCS.', '.GMG.', '..G..', '.....')
            .aisle('SSCSS', 'ACPCA', 'SCPCS', 'GMMMG', '.GMG.', '..G..')
            .aisle('.SCS.', '.APA.', '.SCS.', '.GMG.', '..G..', '.....')
            .aisle('.SCS.', '.APA.', '..C..', '..G..', '.....', '.....')
            .aisle('.SCS.', '.APA.', '.ACA.', '.AAA.', '.....', '.....')
            .aisle('.SCS.', '.APA.', '.CCC.', '.ACA.', '.....', '.....')
            .aisle('.SSS.', '.ACA.', '.CcC.', '.ACA.', '.....', '.....')
            .where('S', Predicates.blocks('gtceu:steel_frame')
                        .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                        .or(Predicates.abilities(PartAbility.INPUT_ENERGY).setExactLimit(3)))
            .where('C', Predicates.blocks(GTBlocks.CASING_STEEL_SOLID.get()))
            .where('A', Predicates.blocks('create:brass_casing'))
            .where('P', Predicates.blocks(GTBlocks.CASING_STEEL_PIPE.get()))
            .where('.', Predicates.any())
            .where('G', Predicates.blocks('minecraft:glowstone'))
            .where('M', Predicates.blocks('botania:manasteel_block'))
            .where('c', Predicates.controller(Predicates.blocks(definition.get())))
            .build()
        )
//        .shapeInfo(controller => MultiblockShapeInfo.builder()
//            .aisle('..e..', '..A..', '..S..', '..G..', '.....', '.....')
//            .aisle('.eSe.', '.ACA.', '.ICI.', '.GMG.', '..G..', '.....')
//            .aisle('SSCSS', 'ACPCA', 'SCPCS', 'GMMMG', '.GMG.', '..G..')
//            .aisle('.SCS.', '.APA.', '.SCS.', '.GMG.', '..G..', '.....')
//            .aisle('.SCS.', '.APA.', '..C..', '..G..', '.....', '.....')
//            .aisle('.SCS.', '.APA.', '.ACA.', '.AAA.', '.....', '.....')
//            .aisle('.SCS.', '.APA.', '.CCC.', '.ACA.', '.....', '.....')
//            .aisle('.OSO.', '.ACA.', '.CcC.', '.ACA.', '.....', '.....')
//            .where('S', Block.getBlock('gtceu:steel_frame'))
//            .where('C', GTBlocks.CASING_STEEL_SOLID.get())
//            .where('A', Block.GTBlock('create:brass_casing'))
//            .where('P', GTBlocks.CASING_STEEL_PIPE.get())
//            .where('.', Block.getBlock('minecraft:air'))
//            .where('G', Block.getBlock('minecraft:glowstone'))
//            .where('M', Block.getBlock('botania:manasteel_block'))
//            .where('e', GTMachines.ENERGY_INPUT_HATCH[1], Direction.NORTH)
//            .where('I', GTMachines.ITEM_IMPORT_BUS[1], Direction.DOWN)
//            .where('O', GTMachines.ITEM_EXPORT_BUS[1], Direction.SOUTH)
//            .where('c', controller, Direction.SOUTH)
//            .build()
//        )
        .workableCasingRenderer(
            GTCEu.id("block/casings/solid/machine_casing_solid_steel"),
            GTCEu.id("block/multiblock/blast_furnace"),
            false
        )
    }
)